server:
let listener = cm::CmIdListener::bind(("0.0.0.0", 5000))?;

let mut builder = listener.get_request()?;

builder.set_pd(); /// ...
let pre_id = builder.build();  // create_qp
// QP created, modify_qp to INIT
pre_id.alloc_msgs();
pre_id.post_recv();

// INIT -> RTR -> RTS, ready-to-send
let id = pre_id.accept(conn_param)



client:
let mut builder = cm::CmId::resovle_route(("192.168.211.2", 5000))?;

builder.set_pd(); /// ...
let pre_id = builder.build();
// QP created, modify_qp to INIT
pre_id.alloc_msgs();
pre_id.post_recv();

// INIT -> RTR -> RTS, ready-to-send
let id = pre_id.connect(conn_param);




RTR and RTS cannot be merged into one step. They must be two separate
steps.


Builder -> QueuePairBuilder -> Connector/Acceptor -> CmId
CmIdBuilder -> PreparedCmId -> CmId


QueuePairBuilder, pd and qp_init_attr, ibv_create_qp in build()
PreparedQueuePair, qp, conn_param, can call alloc_msgs() or post_recv()
QueuPair


1. create_id, bind, listen, get_request
   create_id, resolve_addr, resolve_route
2. create_qp
3. (alloc_msgs, post_recv)
4. connect/accept
